{"version":3,"sources":["component/AddCategory.js","component/GifGridItem.js","helper/getGifs.js","component/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","props","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATU,SAACC,GACjBA,EAAEC,iBAC8B,IAA5BJ,EAAWK,OAAOC,SAClBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdzB,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,a,QCJlBG,G,KAAc,SAACC,GAGxB,OACI,sBAAKC,UAAU,0CAAf,UACI,qBAAKC,IAAKF,EAAMG,IAAKC,IAAKJ,EAAMK,QAChC,4BAAIL,EAAMK,a,uBCXTC,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACZL,EADY,iDACoCM,UAAUF,GAD9C,8DAEEG,MAAMP,GAFR,cAEZQ,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPZ,MAAOW,EAAIX,MACXF,IAAKa,EAAIE,OAAOC,iBAAiBhB,QATvB,kBAaXW,GAbW,4CAAF,sDCOPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAatC,OAPAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GACFH,EAAS,CAACV,KAAMa,EAAML,SAAQ,SAEvC,CAACd,IAEGe,EDPiBK,CAAapB,GAA9BM,EAH4B,EAG5BA,KAAMQ,EAHsB,EAGtBA,QAEb,OACI,qCACA,6BAAKd,IACJc,GAAW,wCAEZ,qBAAKpB,UAAU,YAAf,SACI,6BAEQY,EAAKE,KAAI,SAACC,GAAD,OACL,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,eEdjCW,EAAe,WAAO,IAAD,EAGM1C,mBAAS,CAAC,eAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAK9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAE7B,uBACA,6BAEQ4C,EAAWd,KAAI,SAACR,GAAD,OAEX,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCjBtCuB,IAASC,OACL,cAAC,EAAD,IAAmBC,SAASC,eAAe,U","file":"static/js/main.86c7aa99.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        if(!inputValue.trim().length == 0 ){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleChange}></input>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport '../index.css'\r\n\r\n\r\nexport const GifGridItem = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card  animate__animated animate__fadeIn\">\r\n            <img src={props.url} alt={props.title}></img>\r\n            <p>{props.title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\r\n    img: PropTypes.object\r\n\r\n}\r\n","export const getGifs =async( category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=y78nX9uJsm7XKrbg0gqyjZwFZHTIubJM`\r\n    const resp =  await fetch(url)\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport '../index.css'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            <ol>\r\n                {\r\n                    data.map((img) => (\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    ))\r\n                }\r\n            </ol>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { getGifs } from \"../helper/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({data: imgs, loading:false})});\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './component/AddCategory'\r\nimport { GifGrid } from './component/GifGrid';\r\n\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['The Office']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory  setCategories={setCategories}/>\r\n\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map((category) => \r\n\r\n                        <GifGrid key={category} category={category} />\r\n                        \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,  document.getElementById('root')\n);\n\n"],"sourceRoot":""}